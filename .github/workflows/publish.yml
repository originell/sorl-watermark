name: Publish

#on:
#  release:
#    types: [ published ]
on: [push, pull_request]

# Thanks to pybase64 for having a great build process to steal from.
jobs:
  build_wheels:
    name: Build ${{ matrix.archs }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            archs: "x86_64, i686"
          - os: ubuntu-latest
            archs: "aarch64"
          - os: ubuntu-latest
            archs: "ppc64le"
          - os: ubuntu-latest
            archs: "s390x"
          - os: windows-latest
            archs: "AMD64"
          - os: windows-latest
            archs: "x86"
          - os: macos-latest
            archs: "x86_64, arm64"
    steps:
      - uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1.2.0
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_ARCHS: "${{ matrix.archs }}"
      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip || true
      - name: Build sdist
        run: python setup.py build sdist
      - name: Test sdist
        run: |
          set -exuo pipefail
          mkdir from_source
          pushd from_source
          tar -xf ../dist/sorl-watermark*.tar.gz
          pushd sorl-watermark*
          # make extension mandatory
          export CIBUILDWHEEL=1
          # build extension
          python setup.py build_ext -i -f
          # test
          python runtests.py
          popd
          popd
      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz
  upload_pypi:
    name: Upload to (Test) PyPI
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist
      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/
      - name: Upload to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_RELEASE_TOKEN }}
          skip_existing: true
