name: Publish

#on:
#  release:
#    types: [ published ]
on: [push, pull_request]

# Thanks to pybase64 for having a great build process to steal from.
jobs:
  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.x'

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key:
            publish-py3-v1-${{ hashFiles('**/setup.py') }}
          restore-keys: |
            publish-py3-v1-

      - name: Install OS dependencies
        run: |
          sudo apt-get update
          sudo apt-get -qq install libfreetype6-dev liblcms2-dev python3-tk \
                                ghostscript libffi-dev libjpeg-turbo-progs libopenjp2-7-dev \
                                cmake imagemagick libharfbuzz-dev libfribidi-dev \
                                libboost-python-dev libgraphicsmagick++1-dev \
                                libgraphicsmagick1-dev graphicsmagick libjpeg62 \
                                zlib1g-dev
          sudo ln -s /usr/lib/x86_64-linux-gnu/libboost_python38.so /usr/lib/x86_64-linux-gnu/libboost_python.so

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip || true
          pip install django Pillow pgmagick sorl-thumbnail tox tox-gh-actions

      - name: Build sdist
        run: python setup.py build sdist

      - name: Test sdist
        run: |
          set -exuo pipefail
          mkdir from_source
          pushd from_source
          tar -xf ../dist/sorl-watermark*.tar.gz
          cp -r ../tests/src sorl-watermark*/tests/
          pushd sorl-watermark*
          python setup.py install
          # test
          tox -v
          popd
          popd

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to (Test) PyPI
    needs: [ build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_TEST_TOKEN }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/

      - name: Upload to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.4.2
        with:
          user: __token__
          password: ${{ secrets.PYPI_RELEASE_TOKEN }}
          skip_existing: true
